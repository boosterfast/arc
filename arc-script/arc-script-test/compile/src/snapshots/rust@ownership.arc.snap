---
source: arc-script-test/compile/src/insta.rs
expression: s
input_file: arc-script-test/compile/src/tests/expect_fail/ownership.arc

---
#[allow(non_snake_case)]
#[allow(unused_must_use)]
#[allow(dead_code)]
#[allow(unused_variables)]
#[allow(unused_imports)]
#[allow(unused_braces)]
#[allow(irrefutable_let_patterns)]
#[allow(clippy::redundant_field_names)]
#[allow(clippy::unused_unit)]
#[allow(clippy::double_parens)]
pub mod arc_script_output {
    use super::*;
    use arc_script::arcorn;
    use arc_script::arcorn::*;
    pub fn main(
        s0_0: Stream<<i32 as Convert>::T>,
    ) -> (Stream<<i32 as Convert>::T>, Stream<<i32 as Convert>::T>) {
        let x_0: (Stream<<i32 as Convert>::T>, Stream<<i32 as Convert>::T>) =
            (val!(s0_0), val!(s0_0));
        val!(x_0)
    }
}
pub use arc_script_output::*;


