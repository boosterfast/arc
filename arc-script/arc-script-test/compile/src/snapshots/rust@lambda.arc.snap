---
source: arc-script-test/compile/src/insta.rs
expression: s
input_file: arc-script-test/compile/src/tests/expect_pass/lambda.arc

---
#[allow(non_snake_case)]
#[allow(unused_must_use)]
#[allow(dead_code)]
#[allow(unused_variables)]
#[allow(unused_imports)]
#[allow(unused_braces)]
#[allow(irrefutable_let_patterns)]
#[allow(clippy::redundant_field_names)]
#[allow(clippy::unused_unit)]
#[allow(clippy::double_parens)]
pub mod arc_script_output {
    use super::*;
    use arc_script::arcorn;
    use arc_script::arcorn::*;
    pub fn x_0(i_0: i32) -> i32 {
        let x_1: i32 = 1i32;
        let x_2: i32 = arcorn::val!(i_0) + arcorn::val!(x_1);
        arcorn::val!(x_2)
    }
    pub fn test() -> i32 {
        let x_3: Box<dyn arcorn::ArcornFn(i32) -> i32> =
            Box::new(x_0) as Box<dyn arcorn::ArcornFn(i32) -> i32>;
        let x_4: i32 = 1i32;
        let x_5: i32 = arcorn::val!(x_3)(arcorn::val!(x_4));
        arcorn::val!(x_5)
    }
}
pub use arc_script_output::*;


