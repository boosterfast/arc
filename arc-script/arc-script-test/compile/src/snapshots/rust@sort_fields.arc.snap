---
source: arc-script-test/compile/src/insta.rs
expression: s
input_file: arc-script-test/compile/src/tests/expect_pass/sort_fields.arc

---
#[allow(non_snake_case)]
#[allow(unused_must_use)]
#[allow(dead_code)]
#[allow(unused_variables)]
#[allow(unused_imports)]
#[allow(unused_braces)]
#[allow(irrefutable_let_patterns)]
#[allow(clippy::redundant_field_names)]
#[allow(clippy::unused_unit)]
#[allow(clippy::double_parens)]
pub mod arc_script_output {
    use super::*;
    use arc_script::arcorn;
    pub fn foo(a_0: Struct1xi321yi32End) -> i32 {
        let x_0: i32 = (a_0.clone()).x;
        let x_1: i32 = (a_0.clone()).y;
        let x_2: i32 = (x_0.clone()) + (x_1.clone());
        (x_2.clone())
    }
    pub fn bar(a_1: Struct1xi321yi32End) -> i32 {
        let x_3: i32 = (a_1.clone()).x;
        let x_4: i32 = (a_1.clone()).y;
        let x_5: i32 = (x_3.clone()) + (x_4.clone());
        (x_5.clone())
    }
    #[arcorn::rewrite]
    pub struct Struct1xi321yi32End {
        x: i32,
        y: i32,
    }
}
pub use arc_script_output::*;


