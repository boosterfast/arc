---
source: arc-script-test/compile/src/insta.rs
expression: s
input_file: arc-script-test/compile/src/tests/expect_pass/fib.arc
---
module @toplevel {
    func @crate_fib(%n_0: si32) -> si32 {
        %x_0 = arc.constant 2 : si32
        %x_1 = arc.cmpi gt, %n_0, %x_0 : si32
        %x_A = "arc.if"(%x_1) ({
            %x_2 = arc.constant 1 : si32
            %x_3 = arc.subi %n_0, %x_2 : si32
            %x_4 = call @crate_fib(%x_3) : (si32) -> si32
            %x_5 = arc.constant 2 : si32
            %x_6 = arc.subi %n_0, %x_5 : si32
            %x_7 = call @crate_fib(%x_6) : (si32) -> si32
            %x_8 = arc.addi %x_4, %x_7 : si32
            "arc.block.result"(%x_8) : (si32) -> ()
        },{
            %x_9 = arc.constant 0 : si32
            "arc.block.result"(%x_9) : (si32) -> ()
        }) : (i1) -> si32
        return %x_A : si32
    }
    func @crate_test() -> si32 {
        %x_B = arc.constant 5 : si32
        %x_C = call @crate_fib(%x_B) : (si32) -> si32
        return %x_C : si32
    }
}

